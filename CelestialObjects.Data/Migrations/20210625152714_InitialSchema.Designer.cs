// <auto-generated />
using System;
using CelestialObjects.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CelestialObjects.Data.Migrations
{
    [DbContext(typeof(CelestialObjectsContext))]
    [Migration("20210625152714_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CelestialObjects.Data.Entities.CelestialObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DiscoveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscoverySourceId")
                        .HasColumnType("int");

                    b.Property<double>("EquatorialDiameter")
                        .HasColumnType("float");

                    b.Property<double>("Mass")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SurfaceTemperature")
                        .HasColumnType("float");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscoverySourceId");

                    b.HasIndex("TypeId");

                    b.ToTable("CelestialObjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscoveryDate = new DateTime(2018, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscoverySourceId = 1,
                            EquatorialDiameter = 12756200.0,
                            Mass = 5.9723699999999995E+24,
                            Name = "Kepler-37b",
                            SurfaceTemperature = 5800.0,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiscoveryDate = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscoverySourceId = 1,
                            EquatorialDiameter = 4280000.0,
                            Mass = 4.2000000000000002E+40,
                            Name = "X1 NGC 4889",
                            SurfaceTemperature = 2000.0,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            DiscoveryDate = new DateTime(2010, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscoverySourceId = 2,
                            EquatorialDiameter = 184502000.0,
                            Mass = 3.6499999999999997E+29,
                            Name = "V538 Carinae",
                            SurfaceTemperature = 4800.0,
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("CelestialObjects.Data.Entities.CelestialObjectType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CelestialObjectTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Planet",
                            Name = "Planet"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Star",
                            Name = "Star"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Black Hole",
                            Name = "BlackHole"
                        });
                });

            modelBuilder.Entity("CelestialObjects.Data.Entities.DiscoverySource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("DiscoverySources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstablishmentDate = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hubble Space Telescope",
                            StateOwner = "USA",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            EstablishmentDate = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Arecibo Observatory",
                            StateOwner = "Puerto Rico",
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("CelestialObjects.Data.Entities.DiscoverySourceType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiscoverySourceTypes");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Ground Telescopte",
                            Name = "GroundTelescope"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Space Telescope",
                            Name = "SpaceTelescope"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Other",
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("CelestialObjects.Data.Entities.CelestialObject", b =>
                {
                    b.HasOne("CelestialObjects.Data.Entities.DiscoverySource", "DiscoverySource")
                        .WithMany()
                        .HasForeignKey("DiscoverySourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CelestialObjects.Data.Entities.CelestialObjectType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscoverySource");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("CelestialObjects.Data.Entities.DiscoverySource", b =>
                {
                    b.HasOne("CelestialObjects.Data.Entities.DiscoverySourceType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
